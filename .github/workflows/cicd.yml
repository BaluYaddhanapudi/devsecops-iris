name: ci-cd

# run the action on pull_requests and pushes
on: push

jobs:
  # first job to test the application using pytest
  unittest:
    runs-on: ubuntu-latest, windows-latest # choose the OS for running the action
    # define the individual sequential steps to be run
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run pytest
        run: |
          pytest

  codecoverage:
    runs-on: ubuntu-latest, windows-latest # choose the OS for running the action
    strategy:
      matrix: 
        python: ['3.7', '3.8', '3.9']
    env:
      PYTHON: ${{ matrix.python }}
    # define the individual sequential steps to be run
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Generate coverage report
        run: |
          pip install pytest-cov
          pytest --cov=./
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
           token: ${{ secrets.b18688eb-4473-4057-9546-67992d220483 }} # not required for public repos
           files: ./coverage1.xml,./coverage2.xml # optional
           flags: unittests # optional
           name: codecov-umbrella # optional
           fail_ci_if_error: true # optional (default = false)
           verbose: true # optional (default = false)

  container-security:
    runs-on: ubuntu-latest, windows-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: build local container
        uses: docker/build-push-action@v2
        with:
          tags: localbuild/testimage:latest
          context: .
          push: false
          load: true
      - name: Scan image
        uses: anchore/scan-action@v3
        with:
          image: "localbuild/testimage:latest"
          fail-build: false
          severity-cutoff: medium
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: SARIF report
          path: ./results.sarif
  
  upload_zip:
    runs-on: ubuntu-latest, windows-latest # choose the OS for running the action
    needs: 
      - unittest
      - codecoverage
      - container-security
    
    # define the individual sequential steps to be run
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Zip the code
        run: |
          zip -r release.zip . -x ".git/*" ".github/*" ".gitignore"
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: code-release
          path: release.zip
